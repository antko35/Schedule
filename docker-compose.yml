version: "3.9"

services:
  user-service:
    build:
      context: ./src/UserService
      dockerfile: UserService.API/Dockerfile
    ports:
      - "5001:8080" # Локальный порт → Порт внутри контейнера
    environment:
      - ASPNETCORE_ENVIRONMENT=Development

  schedule-service:
    build:
      context: ./src/ScheduleService
      dockerfile: ScheduleService.API/Dockerfile
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - schedule-service-mongo

  schedule-service-mongo:
    image: mongo:latest
    container_name: schedule-service-mongo
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=schedule_db
    volumes:
      - schedule-mongo-data:/data/db

  schedule-service-mongo-express:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=schedule-service-mongo   


  user-management-service:
    build:
      context: ./src/UserManagementService
      dockerfile: UserManagementService.API/Dockerfile
    ports:
      - "5003:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development

volumes:
  schedule-mongo-data:


